{"version":3,"sources":["assets/js/index.js"],"names":["anim","CanvasAnimation","Object","E_GitHub_repemorizer_app_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","timer","c","document","getElementById","ctx","getContext","width","window","innerWidth","height","innerHeight","matrixWords","font_size","columns","drops","x","Math","floor","random","setInterval","fillStyle","fillRect","font","i","length","text","fillText","bind","clearInterval","clearRect","go","onresize","stop"],"mappings":"qHA8GMA,EAAO,eA7GX,SAAAC,IAAeC,OAAAC,EAAA,EAAAD,CAAAE,KAAAH,GACbG,KAAKC,MAAQ,KACbD,KAAKE,EAAIC,SAASC,eAAe,KACjCJ,KAAKK,IAAML,KAAKE,EAAEI,WAAW,uDAI7BN,KAAKE,EAAEK,MAAQC,OAAOC,WACtBT,KAAKE,EAAEQ,OAASF,OAAOG,YAsEvB,IApEA,IAAMC,EAAc,CAClB,KACA,KACA,OACA,KACA,KACA,MACA,QACA,KACA,MACA,MACA,KACA,MACA,SACA,SACA,MACA,QACA,OACA,MACA,OACA,OACA,OACA,OACA,OACA,SACA,OACA,KACA,UACA,OACA,MACA,OACA,QACA,6CACA,2BACA,iCACA,2BACA,iCACA,iCACA,uCACA,qBACA,6CACA,iCACA,2BACA,uCACA,6CACA,iCACA,uCACA,uCACA,qBACA,uCACA,2BACA,2BACA,iCACA,uCACA,2BACA,2BACA,iCACA,6CACA,mDACA,+DACA,wCAGIC,EAAY,GAEdC,EAAUd,KAAKE,EAAEK,MAAQM,EACzBE,EAAQ,GAEHC,EAAI,EAAGA,EAAIF,EAASE,IAC3BD,EAAMC,GAAKC,KAAKC,MAAMD,KAAKE,SAAWnB,KAAKE,EAAEQ,QAqB/CV,KAAKC,MAAQmB,YAnBb,WACEpB,KAAKK,IAAIgB,UAAY,4BACrBrB,KAAKK,IAAIiB,SAAS,EAAG,EAAGtB,KAAKE,EAAEK,MAAOP,KAAKE,EAAEQ,QAE7CV,KAAKK,IAAIgB,UAAY,UACrBrB,KAAKK,IAAIkB,KAAOV,EAAY,WAE5B,IAAK,IAAIW,EAAI,EAAGA,EAAIT,EAAMU,OAAQD,IAAK,CACrC,IAAIE,EAAOd,EAAYK,KAAKC,MAAMD,KAAKE,SAAWP,EAAYa,SAE9DzB,KAAKK,IAAIsB,SAASD,EAAMF,EAAIX,EAAWE,EAAMS,GAAKX,GAE9CE,EAAMS,GAAKX,EAAYb,KAAKE,EAAEQ,QAAUO,KAAKE,SAAW,OAC1DJ,EAAMS,GAAK,GAEbT,EAAMS,OAIoBI,KAAK5B,MAAO,mCAI1C6B,cAAc7B,KAAKC,OACnBD,KAAKK,IAAIyB,UAAU,EAAG,EAAG9B,KAAKE,EAAEK,MAAOP,KAAKE,EAAEQ,kBAKlDd,EAAKmC,KAELvB,OAAOwB,SAAW,WAChBpC,EAAKqC,OACLrC,EAAKmC","file":"static/js/1.444e8775.chunk.js","sourcesContent":["class CanvasAnimation {\r\n  constructor() {\r\n    this.timer = null;\r\n    this.c = document.getElementById(\"c\");\r\n    this.ctx = this.c.getContext(\"2d\");\r\n  }\r\n\r\n  go() {\r\n    this.c.width = window.innerWidth;\r\n    this.c.height = window.innerHeight;\r\n\r\n    const matrixWords = [\r\n      \"do\",\r\n      \"hi\",\r\n      \"have\",\r\n      \"go\",\r\n      \"be\",\r\n      \"can\",\r\n      \"hello\",\r\n      \"he\",\r\n      \"she\",\r\n      \"you\",\r\n      \"we\",\r\n      \"say\",\r\n      \"memory\",\r\n      \"repeat\",\r\n      \"who\",\r\n      \"power\",\r\n      \"will\",\r\n      \"yes\",\r\n      \"like\",\r\n      \"love\",\r\n      \"know\",\r\n      \"take\",\r\n      \"give\",\r\n      \"people\",\r\n      \"good\",\r\n      \"up\",\r\n      \"forward\",\r\n      \"well\",\r\n      \"way\",\r\n      \"want\",\r\n      \"first\",\r\n      \"человек\",\r\n      \"быть\",\r\n      \"время\",\r\n      \"дело\",\r\n      \"жизнь\",\r\n      \"слово\",\r\n      \"работа\",\r\n      \"дом\",\r\n      \"сказать\",\r\n      \"знать\",\r\n      \"есть\",\r\n      \"думать\",\r\n      \"сделать\",\r\n      \"учить\",\r\n      \"память\",\r\n      \"голова\",\r\n      \"дом\",\r\n      \"вопрос\",\r\n      \"друг\",\r\n      \"сила\",\r\n      \"иметь\",\r\n      \"хотеть\",\r\n      \"могу\",\r\n      \"дать\",\r\n      \"взять\",\r\n      \"хороший\",\r\n      \"понимать\",\r\n      \"запоминать\",\r\n      \"любовь\"\r\n    ];\r\n\r\n    const font_size = 16;\r\n   \r\n    let columns = this.c.width / font_size;\r\n    let drops = [];\r\n\r\n    for (let x = 0; x < columns; x++)\r\n      drops[x] = Math.floor(Math.random() * this.c.height);\r\n  \r\n    function draw() {\r\n      this.ctx.fillStyle = \"rgba(255, 255, 255, 0.06)\";\r\n      this.ctx.fillRect(0, 0, this.c.width, this.c.height);\r\n\r\n      this.ctx.fillStyle = \"#0074E8\";\r\n      this.ctx.font = font_size + \"px arial\";\r\n\r\n      for (let i = 0; i < drops.length; i++) {\r\n        let text = matrixWords[Math.floor(Math.random() * matrixWords.length)];\r\n\r\n        this.ctx.fillText(text, i * font_size, drops[i] * font_size);\r\n\r\n        if (drops[i] * font_size > this.c.height && Math.random() > 0.995)\r\n          drops[i] = 0;\r\n\r\n        drops[i]++;\r\n      }\r\n    }\r\n\r\n    this.timer = setInterval(draw.bind(this), 50);\r\n  }\r\n\r\n  stop() {\r\n    clearInterval(this.timer);\r\n    this.ctx.clearRect(0, 0, this.c.width, this.c.height);\r\n  }\r\n}\r\n\r\nconst anim = new CanvasAnimation();\r\nanim.go();\r\n\r\nwindow.onresize = function () {\r\n  anim.stop();\r\n  anim.go();\r\n};\r\n\r\n\r\n//notification prototype\r\n/* (function() {\r\n  function sendNotification(title, options) {\r\n// Проверим, поддерживает ли браузер HTML5 Notifications\r\nif (!(\"Notification\" in window)) {\r\nalert('Ваш браузер не поддерживает HTML Notifications, его необходимо обновить.');\r\n}\r\n\r\n// Проверим, есть ли права на отправку уведомлений\r\nelse if (Notification.permission === \"granted\") {\r\n// Если права есть, отправим уведомление\r\nlet notification = new Notification(title, options);\r\n\r\nfunction clickFunc() { alert('Пользователь кликнул на уведомление'); }\r\n\r\nnotification.onclick = clickFunc;\r\n}\r\n\r\n// Если прав нет, пытаемся их получить\r\nelse if (Notification.permission !== 'denied') {\r\nNotification.requestPermission(function (permission) {\r\n// Если права успешно получены, отправляем уведомление\r\nif (permission === \"granted\") {\r\nlet notification = new Notification(title, options);\r\n\r\n} else {\r\nalert('Вы запретили показывать уведомления'); // Юзер отклонил наш запрос на показ уведомлений\r\n}\r\n});\r\n} else {\r\n// Пользователь ранее отклонил наш запрос на показ уведомлений\r\n// В этом месте мы можем, но не будем его беспокоить. Уважайте решения своих пользователей.\r\n}\r\n\r\n\r\n\r\nsendNotification('Верните Линуса!', {\r\nbody: 'Тестирование HTML5 Notifications',\r\nicon: 'icon.jpg',\r\ndir: 'auto'\r\n});\r\n\r\n})(); */\r\n"],"sourceRoot":""}