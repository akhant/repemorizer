{"version":3,"sources":["constants.js","reducers/index.js","reducers/dictionary.js","reducers/words.js","reducers/user.js","reducers/messages.js","utils/setAuthHeader.js","middlewares/data.js","actions/index.js","components/CardWord.js","components/Card.js","components/Main.js","components/Header.js","utils/index.js","components/LoginPage.js","components/SignupPage.js","components/Dictionary.js","components/Word.js","components/RepeatPage.js","components/graphic/Canvas.js","components/HomePage.js","components/NotFoundPage.js","components/routes/AuthRoute.js","components/ConfirmationPage.js","components/routes/ConfirmedRoute.js","components/routes/OnlyNotAuthRoute.js","components/ForgotPasswordPage.js","components/ResetPasswordPage.js","components/App.js","store/index.js","index.js"],"names":["STAGE","languages","text","value","combineReducers","dictionary","state","arguments","length","undefined","action","type","data","every","d","_id","Object","toConsumableArray","concat","filter","word","removedElement","updatedDictionary","words","wordsToRepeat","w","isRepeatTime","map","updatedWord","user","objectSpread","localStorage","removeItem","messages","setAuthHeader","token","axios","defaults","headers","common","authorization","serverUrl","Data","store","next","payload","post","then","res","catch","error","get","id","patch","_res$data","message","JWT","_res$data2","translateRequest","lang","getFifty","getDictionary","removeText","getWordsToRepeat","checkWordsToRepeat","nextStage","success","signup","fetchCurrentUser","logout","login","forgotPassword","resetPassword","clearMessage","CardWord","props","translation","react_default","a","createElement","className","Icon","color","name","onClick","onRemoveText","Card","componentDidMount","_this","_this2","this","components_CardWord","assign","key","Component","connect","Main","formValue","from","to","hidden","_this$props","window","innerWidth","setState","onChangeInput","e","target","onSubmit","preventDefault","_this$state","prevState","slice","onSelectLanguage","_ref","defineProperty","turnLang","renderTranslatedFromAnotherLanguage","_this$state2","langFrom","_","find","o","prevProps","_this$state3","_this$props2","Grid","Row","Column","mobile","tablet","computer","largeScreen","widescreen","style","paddingTop","Form","method","Group","Dropdown","search","selection","onChange","placeholder","options","size","widths","inline","Field","control","Button","primary","components_Card","Link","_ref2","actions","Header","path","onLogout","renderColorStyle","floated","role","isError","errors","values","some","val","LoginPage","email","password","componentWillUnmount","componentDidUpdate","history","timer","setTimeout","push","inputHandler","validate","isEmail","isAlphanumeric","JSON","stringify","err","textAlign","height","verticalAlign","maxWidth","Message","i","negative","elements_Header_Header","as","Segment","stacked","Input","fluid","icon","iconPosition","PureComponent","SignupPage","password2","username","clearTimeout","Dictionary","_Component","_getPrototypeOf2","classCallCheck","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","updateNextRepeatIn","onRemoveClick","renderAddTime","time","t","Date","toLocaleDateString","toLocaleTimeString","renderNextRepeatIn","lastRepeat","stage","s","Math","floor","parse","now","renderTime","S","D","H","M","renderTable","Table","celled","selectable","HeaderCell","Body","addTime","Cell","width","inherits","createClass","Word","flag","random","handleClick","showResult","nextWord","RepeatPage","centered","components_Word","__webpack_require__","bind","Canvas","HomePage","graphic_Canvas","NotFoundPage","isAuthenticated","component","rest","objectWithoutProperties","Route","render","Redirect","isConfirmed","confirmed","react","renderPage","ForgotPasswordPage","emailHandler","ResetPasswordPage","password1","passwordHandler","match","params","createBrowserHistory","createStore","reducer","applyMiddleware","pathname","location","dispatch","App","es","Router","components_Header","Switch","exact","routes_AuthRoute","ConfirmationPage","routes_ConfirmedRoute","routes_OnlyNotAuthRoute","ReactDOM","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.de15dc22.chunk.js","sourcesContent":["export const TRANSLATE = \"TRANSLATE\";\r\nexport const ADD_TO_REPETITION = \"ADD_TO_REPETITION\";\r\nexport const GET_DICTIONARY = \"GET_DICTIONARY\";\r\nexport const GET_FIFTY = \"GET_FIFTY\";\r\nexport const REMOVE_TEXT = \"REMOVE_TEXT\";\r\nexport const GET_WORDS_TO_REPEAT = \"GET_WORDS_TO_REPEAT\";\r\nexport const CHECK_WORDS_TO_REPEAT = \"CHECK_WORDS_TO_REPEAT\";\r\nexport const NEXT_STAGE = \"NEXT_STAGE\";\r\nexport const SIGNUP = \"SIGNUP\";\r\nexport const USER_LOGGED_IN = \"USER_LOGGED_IN\";\r\nexport const FETCH_CURRENT_USER = \"FETCH_CURRENT_USER\";\r\nexport const LOGIN = \"LOGIN\";\r\nexport const LOGOUT = \"LOGOUT\";\r\nexport const RESET_PASSWORD = \"RESET_PASSWORD\";\r\nexport const FORGOT_PASSWORD = \"FORGOT_PASSWORD\";\r\nexport const SHOW_MESSAGE = \"SHOW_MESSAGE\";\r\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\";\r\n\r\nexport const STAGE = [\r\n  25000,\r\n  120000,\r\n  600000,\r\n  3600000,\r\n  18000000,\r\n  86400000,\r\n  432000000,\r\n  2160000000,\r\n  10800000000,\r\n  64800000000\r\n];\r\n\r\nexport const languages = [\r\n  { text: \"Azerbaijan\", value: \"az\" },\r\n  { text: \"Albanian\", value: \"sq\" },\r\n  { text: \"Amharic\", value: \"am\" },\r\n  { text: \"English\", value: \"en\" },\r\n  { text: \"Arabic\", value: \"ar\" },\r\n  { text: \"Armenian\", value: \"hy\" },\r\n  { text: \"Afrikaans\", value: \"af\" },\r\n  { text: \"Basque\", value: \"eu\" },\r\n  { text: \"Bashkir\", value: \"ba\" },\r\n  { text: \"Belarusian\", value: \"be\" },\r\n  { text: \"Bengali\", value: \"bn\" },\r\n  { text: \"Burmese\", value: \"my\" },\r\n  { text: \"Bulgarian\", value: \"bg\" },\r\n  { text: \"Bosnian\", value: \"bs\" },\r\n  { text: \"Welsh\", value: \"cy\" },\r\n  { text: \"Hungarian\", value: \"hu\" },\r\n  { text: \"Vietnamese\", value: \"vi\" },\r\n  { text: \"Haitian (Creole)\", value: \"ht\" },\r\n  { text: \"Galician\", value: \"gl\" },\r\n  { text: \"Dutch\", value: \"nl\" },\r\n  { text: \"Hill Mari\", value: \"mrj\" },\r\n  { text: \"Greek\", value: \"el\" },\r\n  { text: \"Georgian\", value: \"ka\" },\r\n  { text: \"Gujarati\", value: \"gu\" },\r\n  { text: \"Danish\", value: \"da\" },\r\n  { text: \"Hebrew\", value: \"he\" },\r\n  { text: \"Yiddish\", value: \"yi\" },\r\n  { text: \"Indonesian\", value: \"id\" },\r\n  { text: \"Irish\", value: \"ga\" },\r\n  { text: \"Italian\", value: \"it\" },\r\n  { text: \"Icelandic\", value: \"is\" },\r\n  { text: \"Spanish\", value: \"es\" },\r\n  { text: \"Kazakh\", value: \"kk\" },\r\n  { text: \"Kannada\", value: \"kn\" },\r\n  { text: \"Catalan\", value: \"ca\" },\r\n  { text: \"Kyrgyz\", value: \"ky\" },\r\n  { text: \"Chinese\", value: \"zh\" },\r\n  { text: \"Korean\", value: \"ko\" },\r\n  { text: \"Xhosa\", value: \"xh\" },\r\n  { text: \"Khmer\", value: \"km\" },\r\n  { text: \"Laotian\", value: \"lo\" },\r\n  { text: \"Latin\", value: \"la\" },\r\n  { text: \"Latvian\", value: \"lv\" },\r\n  { text: \"Lithuanian\", value: \"lt\" },\r\n  { text: \"Luxembourgish\", value: \"lb\" },\r\n  { text: \"Malagasy\", value: \"mg\" },\r\n  { text: \"Malay\", value: \"ms\" },\r\n  { text: \"Malayalam\", value: \"ml\" },\r\n  { text: \"Maltese\", value: \"mt\" },\r\n  { text: \"Macedonian\", value: \"mk\" },\r\n  { text: \"Maori\", value: \"mi\" },\r\n  { text: \"Marathi\", value: \"mr\" },\r\n  { text: \"Mari\", value: \"mhr\" },\r\n  { text: \"Mongolian\", value: \"mn\" },\r\n  { text: \"German\", value: \"de\" },\r\n  { text: \"Nepali\", value: \"ne\" },\r\n  { text: \"Norwegian\", value: \"no\" },\r\n  { text: \"Punjabi\", value: \"pa\" },\r\n  { text: \"Papiamento\", value: \"pap\" },\r\n  { text: \"Persian\", value: \"fa\" },\r\n  { text: \"Polish\", value: \"pl\" },\r\n  { text: \"Portuguese\", value: \"pt\" },\r\n  { text: \"Romanian\", value: \"ro\" },\r\n  { text: \"Russian\", value: \"ru\" },\r\n  { text: \"Cebuano\", value: \"ceb\" },\r\n  { text: \"Serbian\", value: \"sr\" },\r\n  { text: \"Sinhala\", value: \"si\" },\r\n  { text: \"Slovakian\", value: \"sk\" },\r\n  { text: \"Slovenian\", value: \"sl\" },\r\n  { text: \"Swahili\", value: \"sw\" },\r\n  { text: \"Sundanese\", value: \"su\" },\r\n  { text: \"Tajik\", value: \"tg\" },\r\n  { text: \"Thai\", value: \"th\" },\r\n  { text: \"Tagalog\", value: \"tl\" },\r\n  { text: \"Tamil\", value: \"ta\" },\r\n  { text: \"Tatar\", value: \"tt\" },\r\n  { text: \"Telugu\", value: \"te\" },\r\n  { text: \"Turkish\", value: \"tr\" },\r\n  { text: \"Udmurt\", value: \"udm\" },\r\n  { text: \"Uzbek\", value: \"uz\" },\r\n  { text: \"Ukrainian\", value: \"uk\" },\r\n  { text: \"Urdu\", value: \"ur\" },\r\n  { text: \"Finnish\", value: \"fi\" },\r\n  { text: \"French\", value: \"fr\" },\r\n  { text: \"Hindi\", value: \"hi\" },\r\n  { text: \"Croatian\", value: \"hr\" },\r\n  { text: \"Czech\", value: \"cs\" },\r\n  { text: \"Swedish\", value: \"sv\" },\r\n  { text: \"Scottish\", value: \"gd\" },\r\n  { text: \"Estonian\", value: \"et\" },\r\n  { text: \"Esperanto\", value: \"eo\" },\r\n  { text: \"Javanese\", value: \"jv\" },\r\n  { text: \"Japanese\", value: \"ja\" }\r\n];\r\n","import { combineReducers } from \"redux\";\r\nimport dictionary from \"./dictionary\";\r\nimport words from \"./words\";\r\nimport user from \"./user\";\r\nimport messages from \"./messages\";\r\n\r\nexport default combineReducers({\r\n  dictionary,\r\n  words,\r\n  user,\r\n  messages\r\n});\r\n","import {\r\n  TRANSLATE,\r\n  GET_FIFTY,\r\n  GET_DICTIONARY,\r\n  REMOVE_TEXT,\r\n  CHECK_WORDS_TO_REPEAT,\r\n  LOGOUT\r\n} from \"../constants\";\r\n\r\nexport default (state = [], action) => {\r\n  const { type, data } = action;\r\n\r\n  switch (type) {\r\n    case TRANSLATE:\r\n      if (\r\n        state.every(d => {\r\n          if (d) return d._id !== data._id;\r\n\r\n          return true;\r\n        })\r\n      ) {\r\n        return [...state, data];\r\n      }\r\n      return state;\r\n\r\n    case GET_FIFTY:\r\n      if (data.dictionary) return data.dictionary;\r\n      break;\r\n    case GET_DICTIONARY:\r\n      if (data.dictionary) return data.dictionary;\r\n      break;\r\n    case REMOVE_TEXT:\r\n      return state.filter(word => word._id !== data.removedElement._id);\r\n\r\n    case CHECK_WORDS_TO_REPEAT:\r\n      return data.updatedDictionary;\r\n\r\n    case LOGOUT:\r\n      return [];\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  GET_WORDS_TO_REPEAT,\r\n  NEXT_STAGE,\r\n  CHECK_WORDS_TO_REPEAT,\r\n  LOGOUT\r\n} from \"../constants\";\r\n\r\nexport default (state = [], action) => {\r\n  const { type, data } = action;\r\n\r\n  switch (type) {\r\n    case GET_WORDS_TO_REPEAT:\r\n      return data.wordsToRepeat;\r\n    case CHECK_WORDS_TO_REPEAT:\r\n      return data.updatedDictionary.filter(w => w.isRepeatTime === true);\r\n    case NEXT_STAGE:\r\n      return state.map(w => {\r\n        if (w._id === data.updatedWord._id) return data.updatedWord;\r\n        return w;\r\n      });\r\n    case LOGOUT:\r\n      return [];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { USER_LOGGED_IN, LOGOUT } from \"../constants\";\r\n\r\nexport default (state = {}, action) => {\r\n  const { type, data } = action;\r\n\r\n  switch (type) {\r\n    case USER_LOGGED_IN:\r\n      return { ...state, ...data.user };\r\n    case LOGOUT:\r\n      localStorage.removeItem(\"JWT\");\r\n      return {};\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SHOW_MESSAGE, CLEAR_MESSAGE } from \"../constants\";\r\n\r\nexport default (state = {}, action) => {\r\n  const { type, data } = action;\r\n\r\n  switch (type) {\r\n    case SHOW_MESSAGE:\r\n      return { ...state, ...data };\r\n    case CLEAR_MESSAGE:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport default function setAuthHeader(token) {\r\n  if (token) {\r\n    axios.defaults.headers.common.authorization = `Bearer ${token}`;\r\n  } else {\r\n    delete axios.defaults.headers.common.authorization;\r\n  }\r\n}\r\n","import axios from \"axios\";\r\nimport setAuthHeader from \"../utils/setAuthHeader\";\r\nimport {\r\n  TRANSLATE,\r\n  GET_DICTIONARY,\r\n  REMOVE_TEXT,\r\n  GET_FIFTY,\r\n  GET_WORDS_TO_REPEAT,\r\n  CHECK_WORDS_TO_REPEAT,\r\n  NEXT_STAGE,\r\n  SIGNUP,\r\n  FETCH_CURRENT_USER,\r\n  USER_LOGGED_IN,\r\n  LOGIN,\r\n  FORGOT_PASSWORD,\r\n  RESET_PASSWORD,\r\n  SHOW_MESSAGE\r\n} from \"../constants\";\r\n\r\nconst serverUrl = \"https://repemorizer.herokuapp.com/api/\";\r\n\r\nconst Data = store => next => action => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case TRANSLATE:\r\n      return axios\r\n        .post(`${serverUrl}/translate`, { ...payload })\r\n        .then(res =>\r\n          next({\r\n            type: TRANSLATE,\r\n            data: {\r\n              ...res.data\r\n            }\r\n          })\r\n        )\r\n        .catch(error => axios.post(`${serverUrl}/error`, { error }));\r\n\r\n    case GET_FIFTY:\r\n      return axios\r\n        .get(`${serverUrl}/get_fifty`)\r\n        .then(res =>\r\n          next({\r\n            type: GET_FIFTY,\r\n            data: {\r\n              dictionary: res.data\r\n            }\r\n          })\r\n        )\r\n        .catch(error => axios.post(`${serverUrl}/error`, { error }));\r\n\r\n    case GET_DICTIONARY:\r\n      return axios\r\n        .get(`${serverUrl}/get_dictionary`)\r\n        .then(res =>\r\n          next({\r\n            type: GET_DICTIONARY,\r\n            data: {\r\n              dictionary: res.data\r\n            }\r\n          })\r\n        )\r\n        .catch(error => axios.post(`${serverUrl}/error`, { error }));\r\n\r\n    case REMOVE_TEXT:\r\n      return axios\r\n        .post(`${serverUrl}/remove_text`, { id: payload })\r\n        .then(res =>\r\n          next({\r\n            type: REMOVE_TEXT,\r\n            data: {\r\n              removedElement: res.data\r\n            }\r\n          })\r\n        )\r\n        .catch(error => axios.post(`${serverUrl}/error`, { error }));\r\n\r\n    case GET_WORDS_TO_REPEAT:\r\n      return axios\r\n        .get(`${serverUrl}/get_words_to_repeat`)\r\n        .then(res =>\r\n          next({\r\n            type: GET_WORDS_TO_REPEAT,\r\n            data: {\r\n              wordsToRepeat: res.data\r\n            }\r\n          })\r\n        )\r\n        .catch(error => axios.post(`${serverUrl}/error`, { error }));\r\n\r\n    case CHECK_WORDS_TO_REPEAT:\r\n      return axios\r\n        .patch(`${serverUrl}/check_words_to_repeat`)\r\n        .then(res =>\r\n          next({\r\n            type: CHECK_WORDS_TO_REPEAT,\r\n            data: {\r\n              updatedDictionary: res.data\r\n            }\r\n          })\r\n        )\r\n\r\n        .catch(error => axios.post(`${serverUrl}/error`, { error }));\r\n\r\n    case NEXT_STAGE:\r\n      return axios\r\n        .patch(`${serverUrl}/next_stage`, { ...payload })\r\n        .then(res =>\r\n          next({\r\n            type: NEXT_STAGE,\r\n            data: {\r\n              updatedWord: res.data\r\n            }\r\n          })\r\n        )\r\n        .catch(error => axios.post(`${serverUrl}/error`, { error }));\r\n\r\n    case SIGNUP:\r\n      return axios\r\n        .post(`${serverUrl}/signup`, { ...payload })\r\n        .then(res => {\r\n          const { token, message } = res.data;\r\n          if (message) {\r\n            next({\r\n              type: SHOW_MESSAGE,\r\n              data: {\r\n                ...res.data\r\n              }\r\n            });\r\n          }\r\n          if (token) {\r\n            localStorage.JWT = token;\r\n            setAuthHeader(token);\r\n            next({\r\n              type: USER_LOGGED_IN,\r\n              data: {\r\n                user: res.data\r\n              }\r\n            });\r\n          }\r\n        })\r\n        .catch(error => axios.post(`${serverUrl}/error`, { error }));\r\n\r\n    case FETCH_CURRENT_USER:\r\n      return axios\r\n        .get(`${serverUrl}/fetch_current_user`)\r\n        .then(res => {\r\n          next({\r\n            type: USER_LOGGED_IN,\r\n            data: {\r\n              user: res.data\r\n            }\r\n          });\r\n        })\r\n        .catch(error => axios.post(`${serverUrl}/error`, { error }));\r\n\r\n    case LOGIN:\r\n      return axios\r\n        .post(`${serverUrl}/login`, { ...payload })\r\n        .then(res => {\r\n          const { token, message } = res.data;\r\n          if (message) {\r\n            next({\r\n              type: SHOW_MESSAGE,\r\n              data: {\r\n                ...res.data\r\n              }\r\n            });\r\n          }\r\n          if (token) {\r\n            localStorage.JWT = token;\r\n            setAuthHeader(token);\r\n            next({\r\n              type: USER_LOGGED_IN,\r\n              data: {\r\n                user: res.data\r\n              }\r\n            });\r\n          }\r\n        })\r\n        .catch(error => axios.post(`${serverUrl}/error`, { error }));\r\n\r\n    case FORGOT_PASSWORD:\r\n      return axios\r\n        .post(`${serverUrl}/forgot_password`, { ...payload })\r\n        .then(res => {\r\n          const { message } = res.data;\r\n          if (message) {\r\n            return next({\r\n              type: SHOW_MESSAGE,\r\n              data: {\r\n                ...res.data\r\n              }\r\n            });\r\n          }\r\n        })\r\n        .catch(error => axios.post(`${serverUrl}/error`, { error }));\r\n\r\n    case RESET_PASSWORD:\r\n      return axios\r\n        .post(`${serverUrl}/reset_password`, { ...payload })\r\n        .then(res => {\r\n          const { message } = res.data;\r\n          if (message) {\r\n            return next({\r\n              type: SHOW_MESSAGE,\r\n              data: {\r\n                ...res.data\r\n              }\r\n            });\r\n          }\r\n        })\r\n        .catch(error => axios.post(`${serverUrl}/error`, { error }));\r\n\r\n    default:\r\n      return next(action);\r\n  }\r\n};\r\n\r\nexport default Data;\r\n","import {\r\n  TRANSLATE,\r\n  SIGNUP,\r\n  LOGOUT,\r\n  LOGIN,\r\n  GET_FIFTY,\r\n  REMOVE_TEXT,\r\n  GET_DICTIONARY,\r\n  GET_WORDS_TO_REPEAT,\r\n  CHECK_WORDS_TO_REPEAT,\r\n  NEXT_STAGE,\r\n  FETCH_CURRENT_USER,\r\n  RESET_PASSWORD,\r\n  FORGOT_PASSWORD,\r\n  CLEAR_MESSAGE\r\n} from \"../constants\";\r\n\r\nexport const translateRequest = (text, lang) => ({\r\n  type: TRANSLATE,\r\n  payload: { text, lang }\r\n});\r\n\r\nexport const getFifty = () => ({\r\n  type: GET_FIFTY\r\n});\r\n\r\nexport const getDictionary = () => ({\r\n  type: GET_DICTIONARY\r\n});\r\n\r\nexport const removeText = id => ({\r\n  type: REMOVE_TEXT,\r\n  payload: id\r\n});\r\n\r\nexport const getWordsToRepeat = () => ({\r\n  type: GET_WORDS_TO_REPEAT\r\n});\r\n\r\nexport const checkWordsToRepeat = () => ({\r\n  type: CHECK_WORDS_TO_REPEAT\r\n});\r\nexport const nextStage = (_id, success) => ({\r\n  type: NEXT_STAGE,\r\n  payload: { _id, success }\r\n});\r\n\r\nexport const signup = data => ({\r\n  type: SIGNUP,\r\n  payload: data\r\n});\r\n\r\nexport const fetchCurrentUser = () => ({\r\n  type: FETCH_CURRENT_USER\r\n});\r\n\r\nexport const logout = () => ({\r\n  type: LOGOUT\r\n});\r\n\r\nexport const login = data => ({\r\n  type: LOGIN,\r\n  payload: data\r\n});\r\n\r\nexport const forgotPassword = data => ({\r\n  type: FORGOT_PASSWORD,\r\n  payload: data\r\n});\r\n\r\nexport const resetPassword = data => ({\r\n  type: RESET_PASSWORD,\r\n  payload: data\r\n});\r\n\r\nexport const clearMessage = () => ({\r\n  type: CLEAR_MESSAGE\r\n});\r\n","import React from \"react\";\r\nimport { Icon } from \"semantic-ui-react\";\r\n\r\nconst CardWord = props => {\r\n  const { text, translation, _id } = props;\r\n  return (\r\n    <div className=\"card__word\">\r\n      <div className=\"card__word_text\">\r\n        <span className=\"lang1\">{text}</span>{\" \"}\r\n        <Icon color=\"black\" name=\"caret right\" />{\" \"}\r\n        <span className=\"lang2\">{translation}</span>\r\n      </div>\r\n      <Icon\r\n        name=\"x\"\r\n        className=\"card__word_button\"\r\n        onClick={props.onRemoveText(_id)}\r\n        color=\"red\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardWord;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { removeText, getFifty } from \"../actions\";\r\n\r\nimport CardWord from \"./CardWord\";\r\n\r\nclass Card extends Component {\r\n  componentDidMount = () => {\r\n    this.props.getFifty();\r\n  };\r\n\r\n  onRemoveText = _id => {\r\n    return () => {\r\n      this.props.removeText(_id);\r\n    };\r\n  };\r\n\r\n  render() {\r\n    const { dictionary } = this.props;\r\n    return (\r\n      <div className=\"last-words\">\r\n        <div className=\"card\">\r\n          \r\n          <div className=\"card__body\">\r\n            {dictionary.map(word => (\r\n              <CardWord\r\n                onRemoveText={this.onRemoveText}\r\n                key={word._id}\r\n                {...word}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <div />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  { removeText, getFifty }\r\n)(Card);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Grid, Form, Button, Icon, Dropdown } from \"semantic-ui-react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport _ from \"lodash\";\r\nimport * as actions from \"../actions\";\r\nimport Card from \"./Card\";\r\nimport { languages } from \"../constants\";\r\n\r\n//TODO: protect form\r\n//TODO: separate the component\r\nclass Main extends Component {\r\n  state = {\r\n    formValue: \"\",\r\n    translation: \"\",\r\n    lang: {\r\n      from: \"en\",\r\n      to: \"ru\"\r\n    },\r\n    word: \"\",\r\n    hidden: false\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { dictionary } = this.props;\r\n    if (dictionary) {\r\n      if (\r\n        this.state.formValue &&\r\n        dictionary.length &&\r\n        dictionary.length !== prevProps.dictionary.length\r\n      ) {\r\n        this.setState({\r\n          translation: dictionary[dictionary.length - 1].translation,\r\n          word: dictionary[dictionary.length - 1]\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    const { checkWordsToRepeat, getWordsToRepeat } = this.props;\r\n    checkWordsToRepeat();\r\n\r\n    getWordsToRepeat();\r\n    if (window.innerWidth < 768) {\r\n      this.setState({\r\n        hidden: true\r\n      });\r\n    }\r\n  };\r\n\r\n  onChangeInput = e => {\r\n    this.setState({\r\n      formValue: e.target.value\r\n    });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    const { translateRequest } = this.props;\r\n    const { formValue, lang } = this.state;\r\n    if (!formValue) return;\r\n    if (formValue.length > 300) {\r\n      return this.setState(\r\n        prevState => ({\r\n          formValue: prevState.formValue.slice(0, 300)\r\n        }),\r\n        () => {\r\n          translateRequest(formValue);\r\n        }\r\n      );\r\n    }\r\n    translateRequest(formValue, lang);\r\n  };\r\n\r\n  onSelectLanguage = (e, { value, name }) => {\r\n    this.setState({\r\n      lang: {\r\n        ...this.state.lang,\r\n        [name]: value\r\n      }\r\n    });\r\n  };\r\n\r\n  turnLang = () => {\r\n    this.setState(prevState => ({\r\n      lang: {\r\n        from: prevState.lang.to,\r\n        to: prevState.lang.from\r\n      }\r\n    }));\r\n  };\r\n\r\n  renderTranslatedFromAnotherLanguage = () => {\r\n    const { word, lang } = this.state;\r\n    if (word && word.langFrom !== lang.from) {\r\n      return (\r\n        //render a name of Language by using a language code\r\n        <div className=\"message_translated-from\">\r\n          Translated from{\" \"}\r\n          {_.find(languages, o => o.value === word.langFrom).text}\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { formValue, translation, lang, hidden } = this.state;\r\n    const { dictionary, words } = this.props;\r\n\r\n    return (\r\n      <Grid className=\"main-page\">\r\n        <Grid.Row>\r\n          <Grid.Column\r\n            mobile={16}\r\n            tablet={9}\r\n            computer={11}\r\n            largeScreen={12}\r\n            widescreen={12}\r\n            style={{ paddingTop: \"70px\" }}\r\n          >\r\n            <Form onSubmit={this.onSubmit} method=\"POST\">\r\n              <Form.Group className=\"lang\">\r\n                <Dropdown\r\n                  search\r\n                  selection\r\n                  onChange={this.onSelectLanguage}\r\n                  placeholder=\"From\"\r\n                  value={lang.from}\r\n                  name=\"from\"\r\n                  options={languages}\r\n                />\r\n                <Icon\r\n                  onClick={this.turnLang}\r\n                  name=\"arrows alternate horizontal\"\r\n                  size=\"large\"\r\n                  className=\"turn-lang-icon\"\r\n                />\r\n                <Dropdown\r\n                  search\r\n                  selection\r\n                  onChange={this.onSelectLanguage}\r\n                  placeholder=\"To\"\r\n                  name=\"to\"\r\n                  value={lang.to}\r\n                  options={languages}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group widths=\"equal\" inline className=\"main__input\">\r\n                <Form.Field\r\n                  className=\"main__input_text\"\r\n                  value={formValue}\r\n                  onChange={this.onChangeInput}\r\n                  control=\"input\"\r\n                  placeholder=\"Enter word to translate\"\r\n                />\r\n\r\n                <Button type=\"sumbit\" className=\"main__btn_translate\" primary>\r\n                  Translate\r\n                </Button>\r\n              </Form.Group>\r\n              <div className=\"main__output\">\r\n                <div className=\"main__output_translation\">{translation}</div>\r\n                {this.renderTranslatedFromAnotherLanguage()}\r\n              </div>\r\n            </Form>\r\n          </Grid.Column>\r\n          <Grid.Column\r\n            mobile={16}\r\n            tablet={7}\r\n            computer={5}\r\n            largeScreen={4}\r\n            widescreen={4}\r\n          >\r\n          <div className=\"main__button-turn_wrapper\">\r\n          \r\n          <Button\r\n              className=\"main__button-turn\"\r\n              onClick={() => {\r\n                this.setState(prevState => ({\r\n                  hidden: !prevState.hidden\r\n                }));\r\n              }}\r\n            >\r\n              Last words\r\n            </Button>\r\n            </div>\r\n            \r\n            {!hidden && <Card dictionary={dictionary} />}\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n\r\n        {words.length ? (\r\n          <div className=\"main__link_repeat\">\r\n            <span>You have {words.length} words to repeat</span>\r\n            <Icon name=\"long arrow alternate right\" />\r\n            <Link to=\"/repeat\"> Repeat words</Link>\r\n          </div>\r\n        ) : (\r\n          <div />\r\n        )}\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nMain.propTypes = {\r\n  dictionary: PropTypes.array,\r\n  getWordsToRepeat: PropTypes.func,\r\n  getFifty: PropTypes.func,\r\n  checkWordsToRepeat: PropTypes.func,\r\n  words: PropTypes.array\r\n};\r\n\r\nexport default connect(\r\n  ({ dictionary, words }) => ({\r\n    dictionary,\r\n    words\r\n  }),\r\n  { ...actions }\r\n)(Main);\r\n","import React, { Component } from \"react\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../actions\";\r\n\r\nclass Header extends Component {\r\n  state = {\r\n    path: \"\"\r\n  };\r\n  onLogout = () => {\r\n    this.props.logout();\r\n  };\r\n\r\n  renderColorStyle = () => {\r\n    return { color: \"#fff \" };\r\n  };\r\n\r\n  render() {\r\n    const { token } = this.props.user;\r\n\r\n    return (\r\n      <Grid>\r\n        <Grid.Row className=\"head\">\r\n          <Grid.Column\r\n            mobile={16}\r\n            tablet={9}\r\n            computer={7}\r\n            largeScreen={6}\r\n            widescreen={4}\r\n            floated=\"right\"\r\n          >\r\n            {token ? (\r\n              <div\r\n                role=\"button\"\r\n                style={this.renderColorStyle()}\r\n                className=\"logout-link\"\r\n                onClick={this.onLogout}\r\n              >\r\n                Logout\r\n              </div>\r\n            ) : (\r\n              <span style={{ color: \"#474749\" }}>\r\n                <Link style={this.renderColorStyle()} to=\"/login\">\r\n                  Login\r\n                </Link>{\" \"}\r\n                |\r\n                <Link style={this.renderColorStyle()} to=\"/signup\">\r\n                  {\" \"}\r\n                  Signup\r\n                </Link>\r\n              </span>\r\n            )}\r\n            |{\" \"}\r\n            <Link style={this.renderColorStyle()} to=\"/dashboard\">\r\n              Dashboard\r\n            </Link>{\" \"}\r\n            |\r\n            <Link style={this.renderColorStyle()} to=\"/dictionary\">\r\n              Dictionary\r\n            </Link>{\" \"}\r\n            |\r\n            <Link style={this.renderColorStyle()} to=\"/repeat\">\r\n              Repeat\r\n            </Link>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  ({ user }) => ({\r\n    user\r\n  }),\r\n  { logout }\r\n)(Header);\r\n","export const isError = errors => {\r\n  return Object.values(errors).some(val => val !== \"\");\r\n};\r\n","import React, { PureComponent } from \"react\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  Grid,\r\n  Header,\r\n  Message,\r\n  Segment\r\n} from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { isEmail, isAlphanumeric } from \"validator\";\r\nimport { connect } from \"react-redux\";\r\nimport { login, clearMessage, logout } from \"../actions\";\r\nimport { isError } from \"../utils\";\r\n\r\nclass LoginPage extends PureComponent {\r\n  state = {\r\n    data: {\r\n      email: \"\",\r\n      password: \"\"\r\n    },\r\n    errors: {\r\n      email: \"\",\r\n      password: \"\"\r\n    }\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.props.logout();\r\n  };\r\n\r\n  componentWillUnmount = () => {\r\n    this.props.clearMessage();\r\n  };\r\n\r\n  componentDidUpdate = () => {\r\n    const { history, messages } = this.props;\r\n    if (messages.success) {\r\n      this.timer = setTimeout(() => {\r\n        history.push(\"/dashboard\");\r\n      }, 1000);\r\n    }\r\n  };\r\n\r\n  inputHandler = e => {\r\n    this.setState({\r\n      data: {\r\n        ...this.state.data,\r\n        [e.target.name]: e.target.value\r\n      }\r\n    });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    const { data } = this.state;\r\n    this.setState(\r\n      {\r\n        errors: {}\r\n      },\r\n      () => {\r\n        if (this.validate(data)) this.props.login(data);\r\n      }\r\n    );\r\n  };\r\n\r\n  validate = data => {\r\n    const errors = {};\r\n\r\n    if (!isEmail(data.email) || !data.email) {\r\n      errors.email = \"Not valid email\";\r\n    }\r\n\r\n    if (\r\n      !isAlphanumeric(data.password) ||\r\n      data.password.length < 4 ||\r\n      data.password.length > 16\r\n    ) {\r\n      errors.password = \"Not valid password\";\r\n    }\r\n\r\n    this.setState({\r\n      errors: { ...errors }\r\n    });\r\n\r\n    return JSON.stringify(errors) === \"{}\";\r\n  };\r\n\r\n  render() {\r\n    const { messages } = this.props;\r\n    const { errors, data } = this.state;\r\n    const err = Object.values(errors);\r\n\r\n    return (\r\n      <div className=\"login-form\">\r\n        <Grid\r\n          textAlign=\"center\"\r\n          style={{ height: \"100%\" }}\r\n          verticalAlign=\"middle\"\r\n        >\r\n          <Grid.Column style={{ maxWidth: 450 }}>\r\n            {messages.message && (\r\n              <Message color={messages.success ? \"green\" : \"red\"}>\r\n                {messages.message}\r\n              </Message>\r\n            )}\r\n            {isError(errors) &&\r\n              err.map((val, i) => (\r\n                <Message key={i} negative>\r\n                  {val}\r\n                </Message>\r\n              ))}\r\n\r\n            <Header as=\"h2\" color=\"teal\" textAlign=\"center\">\r\n              Log in\r\n            </Header>\r\n            <Form onSubmit={this.onSubmit} size=\"large\">\r\n              <Segment stacked>\r\n                <Form.Input\r\n                  onChange={this.inputHandler}\r\n                  value={data.email}\r\n                  fluid\r\n                  name=\"email\"\r\n                  icon=\"mail\"\r\n                  iconPosition=\"left\"\r\n                  placeholder=\"E-mail address\"\r\n                />\r\n                <Form.Input\r\n                  onChange={this.inputHandler}\r\n                  value={data.password}\r\n                  fluid\r\n                  name=\"password\"\r\n                  icon=\"lock\"\r\n                  iconPosition=\"left\"\r\n                  placeholder=\"Password\"\r\n                  type=\"password\"\r\n                />\r\n\r\n                <Button type=\"submit\" color=\"teal\" fluid size=\"large\">\r\n                  LOG IN!\r\n                </Button>\r\n              </Segment>\r\n            </Form>\r\n            <Message>\r\n              <Link to=\"/forgot_password\">forgot password?</Link>\r\n            </Message>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  ({ user, messages }) => ({ user, messages }),\r\n  { login, clearMessage, logout }\r\n)(LoginPage);\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  Grid,\r\n  Header,\r\n  Message,\r\n  Segment\r\n} from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { isEmail, isAlphanumeric } from \"validator\";\r\nimport { signup, clearMessage, logout } from \"../actions\";\r\nimport { isError } from \"../utils\";\r\n\r\nclass SignupPage extends Component {\r\n  state = {\r\n    data: {\r\n      email: \"\",\r\n      password: \"\",\r\n      password2: \"\",\r\n      username: \"\"\r\n    },\r\n    errors: {\r\n      email: \"\",\r\n      password: \"\",\r\n      username: \"\"\r\n    }\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.props.logout();\r\n  };\r\n\r\n  componentDidUpdate = () => {\r\n    const { history, messages } = this.props;\r\n    if (messages.success) {\r\n      this.timer = setTimeout(() => {\r\n        history.push(\"/dashboard\");\r\n      }, 3000);\r\n    }\r\n  };\r\n\r\n  componentWillUnmount = () => {\r\n    clearTimeout(this.timer);\r\n    this.props.clearMessage();\r\n  };\r\n\r\n  inputHandler = e => {\r\n    this.setState({\r\n      data: {\r\n        ...this.state.data,\r\n        [e.target.name]: e.target.value\r\n      }\r\n    });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    const { data } = this.state;\r\n    this.setState(\r\n      {\r\n        errors: {}\r\n      },\r\n      () => {\r\n        if (this.validate(data)) this.props.signup(data);\r\n      }\r\n    );\r\n  };\r\n\r\n  validate = data => {\r\n    const errors = {};\r\n    if (!data.username || !isAlphanumeric(data.username)) {\r\n      errors.username = \"Not valid username\";\r\n    }\r\n    if (!isEmail(data.email) || !data.email) {\r\n      errors.email = \"Not valid email\";\r\n    }\r\n    if (data.password !== data.password2) {\r\n      errors.password = \"Not equal passwords\";\r\n    }\r\n    if (\r\n      !isAlphanumeric(data.password) ||\r\n      data.password.length < 4 ||\r\n      data.password.length > 16\r\n    ) {\r\n      errors.password = \"Not valid password\";\r\n    }\r\n\r\n    this.setState({\r\n      errors: { ...errors }\r\n    });\r\n\r\n    return JSON.stringify(errors) === \"{}\";\r\n  };\r\n\r\n  render() {\r\n    const { messages } = this.props;\r\n    const { errors, data } = this.state;\r\n    const err = Object.values(errors);\r\n    return (\r\n      <div className=\"signup-form\">\r\n        <Grid\r\n          textAlign=\"center\"\r\n          style={{ height: \"100%\" }}\r\n          verticalAlign=\"middle\"\r\n        >\r\n          <Grid.Column style={{ maxWidth: 450 }}>\r\n            {messages.message && (\r\n              <Message color={messages.success ? \"green\" : \"red\"}>\r\n                {messages.message}\r\n              </Message>\r\n            )}\r\n            {isError(errors) &&\r\n              err.map(val => (\r\n                <Message key={val} negative>\r\n                  {val}\r\n                </Message>\r\n              ))}\r\n            <Header as=\"h2\" color=\"teal\" textAlign=\"center\">\r\n              Sign up\r\n            </Header>\r\n            <Form onSubmit={this.onSubmit} size=\"large\">\r\n              <Segment stacked>\r\n                <Form.Input\r\n                  onChange={this.inputHandler}\r\n                  value={data.username}\r\n                  fluid\r\n                  name=\"username\"\r\n                  icon=\"user\"\r\n                  iconPosition=\"left\"\r\n                  placeholder=\"Your name\"\r\n                />\r\n                <Form.Input\r\n                  onChange={this.inputHandler}\r\n                  value={data.email}\r\n                  fluid\r\n                  name=\"email\"\r\n                  icon=\"mail\"\r\n                  iconPosition=\"left\"\r\n                  placeholder=\"E-mail address\"\r\n                />\r\n                <Form.Input\r\n                  onChange={this.inputHandler}\r\n                  value={data.password}\r\n                  fluid\r\n                  name=\"password\"\r\n                  icon=\"lock\"\r\n                  iconPosition=\"left\"\r\n                  placeholder=\"Password\"\r\n                  type=\"password\"\r\n                />\r\n                <Form.Input\r\n                  onChange={this.inputHandler}\r\n                  value={data.password2}\r\n                  fluid\r\n                  name=\"password2\"\r\n                  icon=\"lock\"\r\n                  iconPosition=\"left\"\r\n                  placeholder=\"Password\"\r\n                  type=\"password\"\r\n                />\r\n\r\n                <Button type=\"submit\" color=\"teal\" fluid size=\"large\">\r\n                  SIGN UP!\r\n                </Button>\r\n              </Segment>\r\n            </Form>\r\n            <Message>\r\n              Already have account? <Link to=\"/login\">Log in</Link>\r\n            </Message>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  ({ messages }) => ({ messages }),\r\n  { signup, clearMessage, logout }\r\n)(SignupPage);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Grid, Table, Button, Icon } from \"semantic-ui-react\";\r\nimport * as actions from \"../actions\";\r\nimport { STAGE } from \"../constants\";\r\n\r\nexport class Dictionary extends Component {\r\n  componentDidMount = () => {\r\n    this.props.getDictionary();\r\n    this.props.getWordsToRepeat();\r\n  };\r\n\r\n  componentWillUnmount = () => {\r\n    this.props.checkWordsToRepeat();\r\n  };\r\n\r\n  updateNextRepeatIn = () => {\r\n    this.props.checkWordsToRepeat();\r\n  };\r\n\r\n  onRemoveClick = _id => () => this.props.removeText(_id);\r\n\r\n  renderAddTime = time => {\r\n    if (!time) return \"\";\r\n    const t = new Date(time);\r\n    return `${t.toLocaleDateString()} at ${t.toLocaleTimeString()}`;\r\n  };\r\n\r\n  renderNextRepeatIn = (lastRepeat, stage, isRepeatTime) => {\r\n    if (isRepeatTime) return \"Ready to repeat\";\r\n    const s = Math.floor(\r\n      (Date.parse(lastRepeat) + STAGE[stage] - Date.now()) / 1000\r\n    );\r\n\r\n    if (s > 0) {\r\n      return this.renderTime(s);\r\n    } else {\r\n      this.props.checkWordsToRepeat();\r\n      return \"Ready to repeat\";\r\n    }\r\n  };\r\n\r\n  renderTime = time => {\r\n    let S = `${time % 60} sec `;\r\n    let D = time < 86400 ? \"\" : `${~~(time / 86400)} d `;\r\n    let H = time < 3600 ? \"\" : `${~~(time / 3600)} h `;\r\n    let M = time < 60 ? \"\" : `${~~(time / 60)} min `;\r\n\r\n    return (\r\n      <div className=\"add-time\">\r\n        {D} {H} {M} {S}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderTable = () => {\r\n    return (\r\n      <Table textAlign=\"center\" celled selectable>\r\n        <Table.Header>\r\n          <Table.Row>\r\n            <Table.HeaderCell>Text</Table.HeaderCell>\r\n            <Table.HeaderCell>Translation</Table.HeaderCell>\r\n            <Table.HeaderCell>Stage</Table.HeaderCell>\r\n            <Table.HeaderCell>Time added</Table.HeaderCell>\r\n            <Table.HeaderCell>\r\n              Next repeat in{\" \"}\r\n              <Button onClick={this.updateNextRepeatIn}>Update</Button>\r\n            </Table.HeaderCell>\r\n            <Table.HeaderCell>Remove</Table.HeaderCell>\r\n          </Table.Row>\r\n        </Table.Header>\r\n\r\n        <Table.Body>\r\n          {this.props.dictionary.map(\r\n            ({\r\n              text,\r\n              translation,\r\n              _id,\r\n              addTime,\r\n              stage,\r\n              lastRepeat,\r\n              isRepeatTime\r\n            }) => (\r\n              <Table.Row key={_id}>\r\n                <Table.Cell>{text}</Table.Cell>\r\n                <Table.Cell>{translation}</Table.Cell>\r\n                <Table.Cell width={1}>{stage}</Table.Cell>\r\n                <Table.Cell width={2}>{this.renderAddTime(addTime)}</Table.Cell>\r\n                <Table.Cell width={2}>\r\n                  {this.renderNextRepeatIn(lastRepeat, stage, isRepeatTime)}\r\n                </Table.Cell>\r\n                <Table.Cell width={1}>\r\n                  <Icon\r\n                    name=\"x\"\r\n                    className=\"dictionary__button_remove\"\r\n                    onClick={this.onRemoveClick(_id)}\r\n                    color=\"red\"\r\n                  />\r\n                </Table.Cell>\r\n              </Table.Row>\r\n            )\r\n          )}\r\n        </Table.Body>\r\n      </Table>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { dictionary, words } = this.props;\r\n    if (!dictionary.length)\r\n      return (\r\n        <div className=\"empty-message\">\r\n          There is no words in your dictionary yet\r\n        </div>\r\n      );\r\n    return (\r\n      <div className=\"dictionary\">\r\n        <Grid>\r\n          <Grid.Row>\r\n            <Grid.Column>\r\n              <h1>Dictionary</h1>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n\r\n          <Grid.Row>\r\n            <Grid.Column>\r\n              <div>Words in dictionary: {dictionary.length}</div>\r\n              <div>Ready to repeat: {words.length}</div>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Grid.Column>{this.renderTable()}</Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDictionary.propTypes = {\r\n  dictionary: PropTypes.array,\r\n  words: PropTypes.array\r\n};\r\n\r\nexport default connect(\r\n  ({ dictionary, words }) => ({\r\n    dictionary,\r\n    words\r\n  }),\r\n  { ...actions }\r\n)(Dictionary);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button } from \"semantic-ui-react\";\r\n\r\nexport class Word extends Component {\r\n  state = {\r\n    flag: \"\",\r\n    hidden: true\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.setState({\r\n      flag: Math.random() > 0.5\r\n    });\r\n  };\r\n\r\n  handleClick = success => () => {\r\n    this.setState({\r\n      hidden: false\r\n    });\r\n    this.props.showResult(this.props._id, success);\r\n  };\r\n\r\n  render() {\r\n    const { flag, hidden } = this.state;\r\n    const { text, translation } = this.props;\r\n    return (\r\n      <div className=\"word\">\r\n        <div className=\"word__text\">\r\n          <span className=\"word__text_one\"> {flag ? text : translation}</span>\r\n          <span className=\"word__text_translate\" hidden={hidden}>\r\n            {\" \"}\r\n            - {flag ? translation : text}\r\n          </span>\r\n        </div>\r\n\r\n        {hidden && (\r\n          <div className=\"word__buttons\">\r\n            <Button className=\"word__buttons_know\" onClick={this.handleClick(true)}>I know</Button>\r\n            <Button className=\"word__buttons_remind\" onClick={this.handleClick(false)}>Remind</Button>\r\n          </div>\r\n        )}\r\n        {!hidden && (\r\n          <Button onClick={this.props.nextWord} className=\"word__button_next\">\r\n            Next word\r\n          </Button>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nWord.propTypes = {\r\n  text: PropTypes.string,\r\n  translation: PropTypes.string,\r\n  id: PropTypes.string,\r\n  nextStage: PropTypes.func\r\n};\r\nexport default Word;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as actions from \"../actions\";\r\nimport Word from \"./Word\";\r\n\r\nclass RepeatPage extends Component {\r\n  componentDidMount = () => {\r\n    this.props.getWordsToRepeat();\r\n  };\r\n\r\n  nextWord = () => {\r\n    this.props.getWordsToRepeat();\r\n  };\r\n\r\n  showResult = (_id, success) => {\r\n    this.props.nextStage(_id, success);\r\n  };\r\n\r\n  render() {\r\n    const { words } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <Grid className=\"repeat-page\">\r\n          <Grid.Row centered>\r\n            <Grid.Column>\r\n              <h1>Memory check!</h1>\r\n              <div className=\"repeat__list\">\r\n                {words.length ? (\r\n                  <Word\r\n                    text={words[0].text}\r\n                    translation={words[0].translation}\r\n                    _id={words[0]._id}\r\n                    key={words[0]._id}\r\n                    showResult={this.showResult}\r\n                    nextWord={this.nextWord}\r\n                  />\r\n                ) : (\r\n                  <div className=\"empty-message\">\r\n                    There is no words to repeat\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRepeatPage.propTypes = {\r\n  words: PropTypes.array,\r\n  getWordsToRepeat: PropTypes.func,\r\n  nextStage: PropTypes.func\r\n};\r\n\r\nexport default connect(\r\n  ({ words }) => ({\r\n    words\r\n  }),\r\n  { ...actions }\r\n)(RepeatPage);\r\n","import React from \"react\";\r\n\r\nimport(\"../../assets/js/index.js\");\r\n\r\nconst Canvas = () => <canvas id=\"c\" />;\r\n\r\nexport default Canvas;\r\n","import React from \"react\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport Canvas from \"./graphic/Canvas\";\r\n\r\nconst HomePage = () => (\r\n  <div className=\"home-page\">\r\n    <Grid>\r\n      <Grid.Row className=\"home-page__header\">\r\n        <Grid.Column>\r\n          <h1>Repemorizer</h1>\r\n\r\n          <h3>Translate, repeat and memorize new words</h3>\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n      <Grid.Row>\r\n        <Canvas />\r\n      </Grid.Row>\r\n    </Grid>\r\n  </div>\r\n);\r\n\r\nexport default HomePage;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport class NotFoundPage extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        This page doesn't exist\r\n        <hr />\r\n        <Link to=\"/dashboard\">Go to dashboard</Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NotFoundPage;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst AuthRoute = ({ isAuthenticated, component: Component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      isAuthenticated ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/confirmation\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nAuthRoute.propTypes = {\r\n  component: PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool.isRequired\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    isAuthenticated: !!state.user.token\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(AuthRoute);\r\n","import React, { Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst renderPage = (isConfirmed, isAuthenticated) => {\r\n  if (isConfirmed) {\r\n    return (\r\n      <div className=\"empty-message\">\r\n        You've already confirmed your email. Enjoy the app.\r\n      </div>\r\n    );\r\n  }\r\n  if (isAuthenticated) {\r\n    return (\r\n      <div className=\"empty-message\">\r\n        Please confirm your email to get access to dictionary and repetition.\r\n        <Link to=\"/dashboard\"> Go to dashboard </Link>\r\n      </div>\r\n    );\r\n  }\r\n  return <div className=\"empty-message\">Please sign up or log in</div>;\r\n};\r\nconst ConfirmationPage = ({ isConfirmed, isAuthenticated }) => {\r\n  return <Fragment>{renderPage(isConfirmed, isAuthenticated)}</Fragment>;\r\n};\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    isConfirmed: state.user.confirmed,\r\n    isAuthenticated: !!state.user.token\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(ConfirmationPage);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst ConfirmedRoute = ({ isConfirmed, component: Component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      isConfirmed ? <Component {...props} /> : <Redirect to=\"/confirmation\" />\r\n    }\r\n  />\r\n);\r\n\r\nConfirmedRoute.propTypes = {\r\n  component: PropTypes.func.isRequired\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    isConfirmed: state.user.confirmed\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(ConfirmedRoute);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst OnlyNotAuthRoute = ({\r\n  isAuthenticated,\r\n  component: Component,\r\n  ...rest\r\n}) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      isAuthenticated ? <Redirect to=\"/dashboard\" /> : <Component {...props} />\r\n    }\r\n  />\r\n);\r\n\r\nOnlyNotAuthRoute.propTypes = {\r\n  component: PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool.isRequired\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    isAuthenticated: !!state.user.token,\r\n    messages: state.messages\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(OnlyNotAuthRoute);\r\n","import React, { PureComponent } from \"react\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  Grid,\r\n  Header,\r\n  Segment,\r\n  Message\r\n} from \"semantic-ui-react\";\r\nimport { connect } from \"react-redux\";\r\nimport { isEmail } from \"validator\";\r\nimport { forgotPassword, clearMessage } from \"../actions\";\r\n\r\nclass ForgotPasswordPage extends PureComponent {\r\n  state = {\r\n    data: {\r\n      email: \"\"\r\n    },\r\n    error: {\r\n      email: \"\"\r\n    }\r\n  };\r\n\r\n  componentDidUpdate = () => {\r\n    const { history, messages } = this.props;\r\n    if (messages.success) {\r\n      setTimeout(() => {\r\n        history.push(\"/\");\r\n      }, 3000);\r\n    }\r\n  };\r\n\r\n  componentWillUnmount = () => {\r\n    this.props.clearMessage();\r\n  };\r\n\r\n  emailHandler = e => {\r\n    this.setState({\r\n      data: {\r\n        email: e.target.value\r\n      }\r\n    });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    const { data } = this.state;\r\n    this.setState(\r\n      {\r\n        error: {}\r\n      },\r\n      () => {\r\n        if (this.validate(data)) {\r\n          this.props.forgotPassword(data);\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  validate = data => {\r\n    const error = {};\r\n\r\n    if (!isEmail(data.email)) {\r\n      error.email = \"Not valid email\";\r\n    }\r\n\r\n    this.setState({\r\n      error: { ...error }\r\n    });\r\n\r\n    return !error.email;\r\n  };\r\n\r\n  render() {\r\n    const { messages } = this.props;\r\n    const { error, data } = this.state;\r\n    return (\r\n      <div className=\"login-form\">\r\n        <Grid\r\n          textAlign=\"center\"\r\n          style={{ height: \"100%\" }}\r\n          verticalAlign=\"middle\"\r\n        >\r\n          <Grid.Column style={{ maxWidth: 450 }}>\r\n            {messages.message && (\r\n              <Message color={messages.success ? \"green\" : \"red\"}>\r\n                {messages.message}\r\n              </Message>\r\n            )}\r\n            {error.email && <Message negative>{error.email}</Message>}\r\n\r\n            <Header as=\"h2\" color=\"teal\" textAlign=\"center\">\r\n              Forgot password\r\n            </Header>\r\n            <Form onSubmit={this.onSubmit} size=\"large\">\r\n              <Segment stacked>\r\n                <Form.Input\r\n                  onChange={this.emailHandler}\r\n                  value={data.email}\r\n                  fluid\r\n                  icon=\"mail\"\r\n                  iconPosition=\"left\"\r\n                  placeholder=\"E-mail address\"\r\n                />\r\n\r\n                <Button type=\"submit\" color=\"teal\" fluid size=\"large\">\r\n                  Send confirmation email!\r\n                </Button>\r\n              </Segment>\r\n            </Form>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  ({ messages }) => ({ messages }),\r\n  { forgotPassword, clearMessage }\r\n)(ForgotPasswordPage);\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  Grid,\r\n  Header,\r\n  Segment,\r\n  Message\r\n} from \"semantic-ui-react\";\r\nimport { isAlphanumeric } from \"validator\";\r\nimport { connect } from \"react-redux\";\r\nimport { resetPassword, clearMessage } from \"../actions\";\r\n\r\nclass ResetPasswordPage extends Component {\r\n  state = {\r\n    data: {\r\n      password1: \"\",\r\n      password2: \"\"\r\n    },\r\n    error: {\r\n      password: \"\"\r\n    }\r\n  };\r\n\r\n  componentDidUpdate = () => {\r\n    if (this.props.messages.success) {\r\n      setTimeout(() => {\r\n        this.props.history.push(\"/login\");\r\n      }, 3000);\r\n    }\r\n  };\r\n  componentWillUnmount = () => {\r\n    this.props.clearMessage();\r\n  };\r\n\r\n  passwordHandler = e => {\r\n    this.setState({\r\n      data: {\r\n        ...this.state.data,\r\n        [e.target.name]: e.target.value\r\n      }\r\n    });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    this.setState(\r\n      {\r\n        error: {}\r\n      },\r\n      () => {\r\n        if (this.validate(this.state.data)) {\r\n          this.props.resetPassword({\r\n            token: this.props.match.params.token,\r\n            password: this.state.data.password1\r\n          });\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  validate = data => {\r\n    const error = {};\r\n\r\n    if (data.password1 !== data.password2) {\r\n      error.password = \"Not equal passwords\";\r\n    }\r\n    if (\r\n      !isAlphanumeric(data.password1) ||\r\n      !isAlphanumeric(data.password2) ||\r\n      data.password1.length < 4 ||\r\n      data.password1.length > 16 ||\r\n      data.password2.length < 4 ||\r\n      data.password2.length > 16\r\n    ) {\r\n      error.password = \"Not valid password\";\r\n    }\r\n\r\n    this.setState({\r\n      error: { ...error }\r\n    });\r\n\r\n    return !error.password;\r\n  };\r\n\r\n  render() {\r\n    const { messages } = this.props;\r\n    const { error, data } = this.state;\r\n    return (\r\n      <div className=\"login-form\">\r\n        <Grid\r\n          textAlign=\"center\"\r\n          style={{ height: \"100%\" }}\r\n          verticalAlign=\"middle\"\r\n        >\r\n          <Grid.Column style={{ maxWidth: 450 }}>\r\n            {messages.message && (\r\n              <Message color={messages.success ? \"green\" : \"red\"}>\r\n                {messages.message}\r\n              </Message>\r\n            )}\r\n            {error.password && <Message negative>{error.password}</Message>}\r\n            <Header as=\"h2\" color=\"teal\" textAlign=\"center\">\r\n              Reset password\r\n            </Header>\r\n            <Form onSubmit={this.onSubmit} size=\"large\">\r\n              <Segment stacked>\r\n                <Form.Input\r\n                  onChange={this.passwordHandler}\r\n                  value={data.password1}\r\n                  fluid\r\n                  name=\"password1\"\r\n                  icon=\"lock\"\r\n                  iconPosition=\"left\"\r\n                  placeholder=\"Password\"\r\n                  type=\"password\"\r\n                />\r\n                <Form.Input\r\n                  onChange={this.passwordHandler}\r\n                  value={data.password2}\r\n                  fluid\r\n                  name=\"password2\"\r\n                  icon=\"lock\"\r\n                  iconPosition=\"left\"\r\n                  placeholder=\"Password\"\r\n                  type=\"password\"\r\n                />\r\n\r\n                <Button type=\"submit\" color=\"teal\" fluid size=\"large\">\r\n                  Reset password!\r\n                </Button>\r\n              </Segment>\r\n            </Form>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  ({ user, messages }) => ({ user, messages }),\r\n  { resetPassword, clearMessage }\r\n)(ResetPasswordPage);\r\n","import React, { Fragment } from \"react\";\r\nimport { Router, Route, Switch } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport createBrowserHistory from \"history/createBrowserHistory\";\r\nimport configureStore from \"../store\";\r\nimport Main from \"./Main\";\r\nimport Header from \"./Header\";\r\nimport LoginPage from \"./LoginPage\";\r\nimport SignupPage from \"./SignupPage\";\r\nimport Dictionary from \"./Dictionary\";\r\nimport RepeatPage from \"./RepeatPage\";\r\nimport HomePage from \"./HomePage\";\r\nimport setAuthHeader from \"../utils/setAuthHeader\";\r\nimport { fetchCurrentUser, logout } from \"../actions\";\r\nimport NotFoundPage from \"./NotFoundPage\";\r\nimport AuthRoute from \"./routes/AuthRoute\";\r\nimport ConfirmationPage from \"./ConfirmationPage\";\r\nimport ConfirmedRoute from \"./routes/ConfirmedRoute\";\r\nimport OnlyNotAuthRoute from \"./routes/OnlyNotAuthRoute\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"../assets/styles/styles.sass\";\r\nimport ForgotPasswordPage from \"./ForgotPasswordPage\";\r\nimport ResetPasswordPage from \"./ResetPasswordPage\";\r\n\r\nconst history = createBrowserHistory();\r\n\r\nconst store = configureStore();\r\n\r\nif (localStorage.JWT) {\r\n  const { pathname } = history.location;\r\n  if (pathname !== \"/signup\" && pathname !== \"/login\") {\r\n    setAuthHeader(localStorage.JWT);\r\n    store.dispatch(fetchCurrentUser());\r\n  }\r\n} else {\r\n  store.dispatch(logout());\r\n}\r\n\r\nconst App = () => (\r\n  <Provider store={store}>\r\n    <Router history={history}>\r\n      <Fragment>\r\n        <Header history={history} />\r\n        <Switch>\r\n          <Route path=\"/\" exact component={HomePage} />\r\n          <AuthRoute path=\"/dashboard\" exact component={Main} />\r\n          <Route path=\"/login\" exact component={LoginPage} />\r\n          <Route path=\"/signup\" exact component={SignupPage} />\r\n          <Route path=\"/confirmation\" exact component={ConfirmationPage} />\r\n          <ConfirmedRoute path=\"/dictionary\" exact component={Dictionary} />\r\n          <ConfirmedRoute path=\"/repeat\" exact component={RepeatPage} />\r\n          <OnlyNotAuthRoute\r\n            path=\"/forgot_password\"\r\n            exact\r\n            component={ForgotPasswordPage}\r\n          />\r\n          <OnlyNotAuthRoute\r\n            path=\"/reset_password/:token\"\r\n            component={ResetPasswordPage}\r\n          />\r\n\r\n          <Route component={NotFoundPage} />\r\n        </Switch>\r\n      </Fragment>\r\n    </Router>\r\n  </Provider>\r\n);\r\n\r\nexport default App;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport reducer from \"../reducers\";\r\nimport Data from \"../middlewares/data\";\r\n\r\nexport default function configureStore() {\r\n  const store = createStore(reducer, applyMiddleware(Data));\r\n\r\n  return store;\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}